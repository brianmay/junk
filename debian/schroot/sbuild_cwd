#!/bin/sh -ex

TEMP=`getopt -o '' --long sa,sd,chroot:,key:,username:,build:,mode:,testing -n'sbuild_cwd' -- "$@"`

if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi

eval set -- "$TEMP"

OPTS=""
USERNAME=""
KEY=""
CHROOT="auto"
BUILD=""
MODE="raw"
TESTING=""

if [ -d .git ]
then
    MODE="git"
fi

while true
do
	case "$1" in
	--sa)
		shift
		OPTS="$OPTS -sa"
		;;
	--sd)
		shift
		OPTS="$OPTS -sd"
		;;
	--chroot)
		shift
		CHROOT="$1"
		shift;
		;;
	--key)
		shift
		KEY="$1"
		shift;
		;;
	--username)
		shift
		USERNAME="$1"
		shift;
		;;
	--build)
		shift
		BUILD="$BUILD $1"
		shift;
		;;
	--mode)
		shift
		MODE="$1"
		shift;
		;;
	--testing)
		shift
		TESTING="yes"
		;;
	--)
		shift;
		break ;;
	*) echo "Internal error!" ; exit 1 ;;
	esac
done

if [ -z "$BUILD" ]
then
    BUILD="all"
fi

SOURCE="`dpkg-parsechangelog|sed -n 's/^Source: //p'`"
VERSION="`dpkg-parsechangelog|sed -n 's/^Version: \(.*:\|\)//p'`"
SRC_DISTRIBUTION="`dpkg-parsechangelog|sed -n 's/^Distribution: \(.*:\|\)//p'`"
DSC="$SOURCE"_"$VERSION".dsc

if [ "$CHROOT" = "auto" ]
then
    CHROOT="$SRC_DISTRIBUTION"
fi

session=`schroot -b -c "$CHROOT"`
trap "schroot -e -c '$session'" EXIT TERM HUP INT QUIT
schroot -r -c "$session" -u root -- rm -f "$SOURCE-build-deps_1.0_"*".deb"
schroot -r -c "$session" -u root -- apt-get --yes install devscripts equivs lintian
schroot -r -c "$session" -u root -- "$HOME/tree/devscripts/scripts/mk-build-deps.pl" debian/control
schroot -r -c "$session" -u root -- dpkg --unpack "$SOURCE-build-deps_1.0_"*".deb"
schroot -r -c "$session" -u root -- apt-get -f --yes --no-install-recommends install
schroot -r -c "$session" -u root -- rm "$SOURCE-build-deps_1.0_"*".deb"

for build in $BUILD
do
    THE_OPTS="$OPTS"
    ARCH="`schroot -r -c "$session" -- dpkg-architecture | sed -n 's/^DEB_BUILD_ARCH=//p'`"

    if [ "$build" = "all" ]
    then
        THE_OPTS="$THE_OPTS -F"
        CHANGES=../"$SOURCE"_"$VERSION"_"$ARCH".changes
    elif [ "$build" = "arch-dependent" ]
    then
        THE_OPTS="$THE_OPTS -B"
        CHANGES=../"$SOURCE"_"$VERSION"_"$ARCH".changes
    elif [ "$build" = "arch-independent" ]
    then
        THE_OPTS="$THE_OPTS -A"
        CHANGES=../"$SOURCE"_"$VERSION"_"$ARCH".changes
    elif [ "$build" = "source" ]
    then
        THE_OPTS="$THE_OPTS -S"
        CHANGES=../"$SOURCE"_"$VERSION"_source.changes
    else
        echo "Unknown build $build" >&2
        exit 1
    fi

    if [ "$MODE" = "git" ]
    then
        [ -n "$TESTING" ] && OPTS="$OPTS --git-ignore-new"
        schroot -r -c "$session" -u root -- apt-get --yes install git-buildpackage
        schroot -r -c "$session" -- git-buildpackage -uc -us $THE_OPTS
    elif [ "$MODE" = "raw" ]
    then
        schroot -r -c "$session" -- dpkg-buildpackage -uc -us $THE_OPTS
    else
        echo "Unknown mode $MODE" >&2
        exit 1
    fi

    DISTRIBUTION="`echo "$CHROOT" | sed 's/-i386//'`"
    sed "s/^Distribution:\s*\(.*\)\s*$/Distribution: $DISTRIBUTION/" < "$CHANGES" > "$CHANGES.new"
    mv "$CHANGES.new" "$CHANGES"

    schroot -r -c "$session" -- lintian -I "$CHANGES" || true

    if [ -z "$KEY" ]
    then
        if [ -z "$USERNAME" ]
        then
            debsign "$CHANGES"
        else
            debrsign "$USERNAME" "$CHANGES"
        fi
    else
        if [ -z "$USERNAME" ]
        then
            debsign "-k$KEY" "$CHANGES"
        else
            debrsign "-k$KEY" "$USERNAME" "$CHANGES"
        fi
    fi
done

schroot -e -c "$session"
trap "" EXIT TERM HUP INT QUIT

if [ "$SRC_DISTRIBUTION" != "$DISTRIBUTION" ]
then
    echo "Distribution was changed from $SRC_DISTRIBUTION to $DISTRIBUTION"
fi
